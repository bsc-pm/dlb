/*********************************************************************************/
/*  Copyright 2009-2025 Barcelona Supercomputing Center                          */
/*                                                                               */
/*  This file is part of the DLB library.                                        */
/*                                                                               */
/*  DLB is free software: you can redistribute it and/or modify                  */
/*  it under the terms of the GNU Lesser General Public License as published by  */
/*  the Free Software Foundation, either version 3 of the License, or            */
/*  (at your option) any later version.                                          */
/*                                                                               */
/*  DLB is distributed in the hope that it will be useful,                       */
/*  but WITHOUT ANY WARRANTY; without even the implied warranty of               */
/*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                */
/*  GNU Lesser General Public License for more details.                          */
/*                                                                               */
/*  You should have received a copy of the GNU Lesser General Public License     */
/*  along with DLB.  If not, see <https://www.gnu.org/licenses/>.                */
/*********************************************************************************/

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#ifdef MPI_LIB

#include "LB_core/spd.h"
#include "mpi/mpi_calls_coded.h"
#include "mpi/mpi_core.h"
#include "support/debug.h"
#include "support/dlb_common.h"
#include <mpi.h>

#ifdef HAVE_ISO_FORTRAN_BINDING_H
#include <ISO_Fortran_binding.h>
#else
#error "Configuration error: this file should not be compiled without ISO_Fortran_binding.h (check Makefile.am)"
#endif

// Older MPI implementations may partially support f08ts bindings but
// not define MPI_F08_status. Since we don't use the parameter or need
// conversion, we can safely ignore its type.
#ifndef HAVE_MPI_F08_STATUS_TYPE
typedef struct MPI_F08_status MPI_F08_status;
#endif

#pragma pygen start where(mpi_call.has_assumed_rank_argument)
DLB_EXPORT_SYMBOL
void DLB_{MPI_NAME}_cdesc_enter({CSHIM_CDESC_PARAMS}) {{
    spd_enter_dlb(thread_spd);
    verbose(VB_MPI_API, ">> {MPI_NAME}");
    before_mpi({MPI_KEYNAME});
}}

DLB_EXPORT_SYMBOL
void DLB_{MPI_NAME}_cdesc_leave() {{
    verbose(VB_MPI_API, "<< {MPI_NAME}");
    after_mpi({MPI_KEYNAME});
}}

#pragma pygen end
#endif /* MPI_LIB */
