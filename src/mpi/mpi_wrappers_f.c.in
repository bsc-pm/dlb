/*********************************************************************************/
/*  Copyright 2009-2025 Barcelona Supercomputing Center                          */
/*                                                                               */
/*  This file is part of the DLB library.                                        */
/*                                                                               */
/*  DLB is free software: you can redistribute it and/or modify                  */
/*  it under the terms of the GNU Lesser General Public License as published by  */
/*  the Free Software Foundation, either version 3 of the License, or            */
/*  (at your option) any later version.                                          */
/*                                                                               */
/*  DLB is distributed in the hope that it will be useful,                       */
/*  but WITHOUT ANY WARRANTY; without even the implied warranty of               */
/*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                */
/*  GNU Lesser General Public License for more details.                          */
/*                                                                               */
/*  You should have received a copy of the GNU Lesser General Public License     */
/*  along with DLB.  If not, see <https://www.gnu.org/licenses/>.                */
/*********************************************************************************/

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#ifdef MPI_LIB

#include "mpi/dlb_mpi_hooks_f.h"
#include "support/debug.h"
#include "support/dlb_common.h"

#include <mpi.h>

// pmpi headers
#pragma pygen start where (not mpi_call.embiggened)
void p{MPI_LCASE}({FC_PARAMS}) __attribute__((weak));
#pragma pygen end

// mpi intercept
#pragma pygen start where (not mpi_call.embiggened)
DLB_EXPORT_SYMBOL
void {MPI_LCASE}({FC_PARAMS}) {{
    verbose(VB_MPI_INT, ">> {MPI_NAME}");
    DLB_{MPI_NAME}_F_enter({FC_ARGS});
    p{MPI_LCASE}({FC_ARGS});
    DLB_{MPI_NAME}_F_leave();
    verbose(VB_MPI_INT, "<< {MPI_NAME}");
}}

DLB_EXPORT_SYMBOL
DLB_ALIAS(void, {MPI_LCASE}_, ({FC_PARAMS}), ({FC_ARGS}), {MPI_LCASE})

DLB_EXPORT_SYMBOL
DLB_ALIAS(void, {MPI_LCASE}__, ({FC_PARAMS}), ({FC_ARGS}), {MPI_LCASE});

#pragma pygen end

#endif /* MPI_LIB */
