/*********************************************************************************/
/*  Copyright 2009-2021 Barcelona Supercomputing Center                          */
/*                                                                               */
/*  This file is part of the DLB library.                                        */
/*                                                                               */
/*  DLB is free software: you can redistribute it and/or modify                  */
/*  it under the terms of the GNU Lesser General Public License as published by  */
/*  the Free Software Foundation, either version 3 of the License, or            */
/*  (at your option) any later version.                                          */
/*                                                                               */
/*  DLB is distributed in the hope that it will be useful,                       */
/*  but WITHOUT ANY WARRANTY; without even the implied warranty of               */
/*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                */
/*  GNU Lesser General Public License for more details.                          */
/*                                                                               */
/*  You should have received a copy of the GNU Lesser General Public License     */
/*  along with DLB.  If not, see <https://www.gnu.org/licenses/>.                */
/*********************************************************************************/

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#ifdef MPI_LIB

#include "LB_MPI/MPI_interface.h"

#include "LB_MPI/process_MPI.h"
#include "LB_MPI/MPI_calls_coded.h"
#include "LB_core/spd.h"
#include "support/debug.h"

#include <mpi.h>

#ifndef MPI3_CONST
#  if MPI_VERSION >= 3
#    define MPI3_CONST const
#  else
#    define MPI3_CONST
#  endif
#endif

#pragma GCC visibility push(default)

#pragma pygen start where("MPI3_only" not in info)
void DLB_{MPI_NAME}_enter({C_PARAMS}) {{
    spd_enter_dlb(NULL);
    verbose(VB_MPI_API, ">> {MPI_NAME}...............");
    {BEFORE_FUNC};
}}

void DLB_{MPI_NAME}_leave(void) {{
    verbose(VB_MPI_API, "<< {MPI_NAME}...............");
    {AFTER_FUNC};
}}

#pragma pygen end

#if MPI_VERSION >= 3
#pragma pygen start where("MPI3_only" in info)
void DLB_{MPI_NAME}_enter({C_PARAMS}) {{
    spd_enter_dlb(NULL);
    verbose(VB_MPI_API, ">> {MPI_NAME}...............");
    {BEFORE_FUNC};
}}

void DLB_{MPI_NAME}_leave(void) {{
    verbose(VB_MPI_API, "<< {MPI_NAME}...............");
    {AFTER_FUNC};
}}

#pragma pygen end
#endif

#pragma GCC visibility pop

#endif /* MPI_LIB */
